// Copyright (c) 2013-2020 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

#ifndef __SETTINGS_H__
#define __SETTINGS_H__

#include <string>
#include <stdlib.h>
#include <luna-service2/lunaservice.h>
#include <pbnjson.hpp>
#include <vector>

static const char* const s_settingsFile = "@WEBOS_INSTALL_WEBOS_PREFIX@/notificationmgr/config.json";
static const char* const s_defaultToastIcon = "@WEBOS_INSTALL_WEBOS_PREFIX@/notificationmgr/images/toast-notification-icon.png";
static const char* const s_defaultAlertIcon = "@WEBOS_INSTALL_WEBOS_PREFIX@/notificationmgr/images/alert-notification-icon.png";
static const char* const s_lockFile = "@WEBOS_INSTALL_SYSMGR_LOCALSTATEDIR@/preferences/lock";

class Settings {

public:
	Settings();
	~Settings();
	static Settings* instance();

	bool disableToastNotification();
	bool disableToastNotificationForApp(const std::string& appId);

	bool enableToastNotification();
	bool enableToastNotificationForApp(const std::string& appId);

	bool isPartOfAggregators(std::string sId);

	void loadSettings();

	int getRetentionPeriod();
	std::string getDefaultIcon(const std::string type);

	bool isPrivilegedSource(const std::string& callerId);

	static bool cbGetSystemProperties(LSHandle* lshandle, LSMessage *message, void *user_data);
	static bool cbSettingServiceBusStatusNotification(LSHandle* lshandle, LSMessage *message, void *user_data);
	static bool cb_getSystemSettingForOption(LSHandle* lshandle, LSMessage *msg, void *user_data);
	static bool cb_getSystemSettingForPIN(LSHandle* lshandle, LSMessage *msg, void *user_data);
	static void setBlockNotication(bool substrateMode, bool powerOnlyMode, bool instopCompleted);
	static bool cbSystemSettingsStatusNotification(LSHandle* lshandle, LSMessage *message, void *user_data);

private:
	uint32_t m_disableToastTimestamp;
	int m_thresholdTimer;
	int m_retentionPeriod;
	std::vector<std::string> m_notificationAggregator;

public:
	std::string m_system_pincode;
	std::string m_system_country;
	std::string m_store_mode;
	std::string m_enable_toast; // only for store mode
};

#endif
